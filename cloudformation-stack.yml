# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_Cognito.html

---
Outputs:
  UserPoolProviderURL:
    Value: !GetAtt UserPool.ProviderURL

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: admin_only
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
      UserPoolName: playground-up

  UserPoolWebLoginClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - openid
      CallbackURLs:
        - http://localhost:8080 # must match Webpack's config
      EnableTokenRevocation: false
      PreventUserExistenceErrors: ENABLED
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId:
        Ref: UserPool

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: pmw-playground
      UserPoolId:
        Ref: UserPool

  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowClassicFlow: false
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId: !Ref UserPoolWebLoginClient
          ProviderName: !GetAtt UserPool.ProviderName
      IdentityPoolName: playground-idpool

  AuthenticatedUserRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref IdentityPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": "authenticated"
      Policies:
        # proof-of-concept policy to allow each visitor to update their visit count
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:Query"
                  - "dynamodb:UpdateItem"
                Resource: !GetAtt VisitorCountDdbTable.Arn
                Condition:
                  "ForAllValues:StringEquals":
                    "dynamodb:LeadingKeys":
                      - "${cognito-identity.amazonaws.com:sub}"
          PolicyName: AllowCounterTable

  UnauthenticatedUserRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref IdentityPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": "unauthenticated"

  IdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: IdentityPool
      Roles:
        authenticated: !GetAtt AuthenticatedUserRole.Arn
        unauthenticated: !GetAtt UnauthenticatedUserRole.Arn
      RoleMappings:
        myUserPool:
          IdentityProvider: !Sub "${UserPool.ProviderName}:${UserPoolWebLoginClient}"
          AmbiguousRoleResolution: AuthenticatedRole
          Type: Token

  VisitorCountDdbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PROVISIONED
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1